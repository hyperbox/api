/*
 * Hyperbox - Virtual Infrastructure Manager
 * Copyright (C) 2021 Max Dor
 *
 * https://apps.kamax.io/hyperbox
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

import java.util.regex.Pattern

String buildVersion() {
    def versionPattern = Pattern.compile("v(\\d+\\.)?(\\d+\\.)?(\\d+)(-.*)?")

    String version = System.getenv('HBOX_API_BUILD_VERSION')
    if (version == null || version.length() == 0) {
        version = sourceVersion()
    }
    return versionPattern.matcher(version).matches() ? version.substring(1) : version
}

String sourceVersion() {
    String version = System.getenv('HBOX_API_SOURCE_VERSION')
    if (version != null && version.length() > 0) {
        return version
    }

    ByteArrayOutputStream out = new ByteArrayOutputStream()

    def o = exec {
        commandLine = ['git', 'describe', '--tags', '--always', '--dirty']
        standardOutput = out
        errorOutput = out
        ignoreExitValue = true
    }

    if (o.exitValue != 0) {
        if (o.exitValue != 128) {
            logger.warn('Unable to determine git version: {}', out.toString())
        }

        return "UNKNOWN"
    }

    return out.toString().replace(System.lineSeparator(), '')
}

apply plugin: 'java-library'
apply plugin: 'maven-publish'

group = 'io.kamax.apps.hbox'
version = buildVersion()

sourceCompatibility = 1.8
targetCompatibility = 1.8

String versionInfoFile = "${projectDir}/build/tmp/versionInfo/api.build.properties"

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    // Logging
    api 'org.slf4j:log4j-over-slf4j:1.7.32'

    // Various utilities
    api 'org.apache.commons:commons-lang3:3.12.0'

    // IO Utilities
    api 'commons-io:commons-io:2.5'

    // Auto-detection of classes to support modules
    api 'org.reflections:reflections:0.9.12'

    // Event bus
    api 'net.engio:mbassador:1.1.10'

    // XML
    api 'com.thoughtworks.xstream:xstream:1.4.18'

    // Client-Server protocol
    api 'com.esotericsoftware:kryonet:2.22.0-RC1'

    // Process execution
    api 'org.zeroturnaround:zt-exec:1.12'

    testImplementation 'junit:junit:4.13.2'
}

task versionInfo {
    doLast {
        File versionFile = new File(versionInfoFile)
        versionFile.getParentFile().mkdir()
        versionFile.text = 'version=' + project.version + System.lineSeparator() + 'protocol=' + project.version
    }
}

jar {
    dependsOn versionInfo
    from versionInfoFile
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = project.group
            artifactId = project.name
            version = project.version

            from components.java
        }
    }
}

task install {
    dependsOn publishToMavenLocal
}
